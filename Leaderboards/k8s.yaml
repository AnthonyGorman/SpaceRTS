apiVersion: v1
kind: Pod
metadata:
  namespace: spacerts
  name: mysql
  labels:
    name: mysql
spec:
  containers:
  - image: mysql:8.0.26
    name: mysql
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-password
          key: password
    ports:
    - containerPort: 3306
      name: mysql
    volumeMounts:
    - name: mysql-persistent-storage
      mountPath: /var/lib/mysql
    resources:
      limits:
        memory: 1Gi
        cpu: 500m
  volumes:
  - name: mysql-persistent-storage
    persistentVolumeClaim:
      claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: spacerts
  name: db
spec:
  selector:
    name: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      name: mysql
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: spacerts
  name: mysql-pv-volume
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/srv/SpaceRTS/leaderboard-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: spacerts
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: Pod
metadata:
  namespace: spacerts
  name: leaderboard-api
  labels:
    name: leaderboard-api
spec:
  containers:
  - name: api
    image: docker.arioux.org/games/spacerts/leaderboards
    imagePullPolicy: Never
    ports:
    - containerPort: 5000
      name: http-api
    env:
    - name: ASPNETCORE_URLS
      value: http://0.0.0.0:5000
    - name: ConnectionStrings__MainDB
      valueFrom:
        secretKeyRef:
          name: mysql-password
          key: connectionString
    resources:
      limits:
        memory: 200Mi
        cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  namespace: spacerts
  name: leaderboard-api
spec:
  selector:
    name: leaderboard-api
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: spacerts
  name: leaderboard-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: pluto-certificate-issuer
spec:
  tls:
  - hosts:
    - spacerts.arioux.org
    secretName: spacerts-https-certificates
  rules:
  - host: spacerts.arioux.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: leaderboard-api
            port:
              number: 5000
